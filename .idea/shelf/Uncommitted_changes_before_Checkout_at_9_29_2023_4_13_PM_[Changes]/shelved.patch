Index: app/src/main/java/com/example/inovafin/EsqueceuSenha.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.inovafin\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Patterns\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport com.example.inovafin.databinding.ActivityEsqueceuSenhaBinding\r\nimport com.google.gson.JsonObject\r\nimport com.koushikdutta.async.future.FutureCallback\r\nimport com.koushikdutta.ion.Ion\r\n\r\nclass EsqueceuSenha : AppCompatActivity() {\r\n\r\n    var Host = \"https://inovafin.000webhostapp.com/PHPMailer-master/recuperar.php\"\r\n    var url: String? = null\r\n    var ret: String? = null\r\n\r\n    var email: String? = null\r\n\r\n    private lateinit var binding: ActivityEsqueceuSenhaBinding\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityEsqueceuSenhaBinding.inflate(layoutInflater)\r\n        val view = binding.root\r\n        setContentView(view)\r\n\r\n        binding.icVoltar.setOnClickListener {\r\n            val voltarTela = Intent(this, Login::class.java)\r\n            startActivity(voltarTela)\r\n        }\r\n\r\n        binding.btRecuperar.setOnClickListener {\r\n            iniciarAnimacao()\r\n            recuperar()\r\n        }\r\n    }\r\n\r\n    fun iniciarAnimacao() {\r\n        // Tornar a animação visível e iniciar\r\n        binding.btAnimacao.visibility = View.VISIBLE\r\n        binding.btAnimacao.playAnimation()\r\n\r\n        // Ocultar o texto do botão\r\n        binding.btText.visibility = View.GONE\r\n    }\r\n\r\n    fun pararAnimacao() {\r\n        binding.btAnimacao.cancelAnimation()\r\n        binding.btAnimacao.visibility = View.GONE\r\n\r\n        binding.btText.visibility = View.VISIBLE\r\n    }\r\n\r\n    fun validacaoEmail(emailText: String): Boolean {\r\n        val pattern = Patterns.EMAIL_ADDRESS\r\n        return pattern.matcher(emailText).matches()\r\n    }\r\n\r\n    fun recuperar() {\r\n        email = binding.emailUsuario.text.toString()\r\n\r\n        url = Host\r\n\r\n        if (validacaoEmail(email!!)){\r\n            try {\r\n                Ion.with(this)\r\n                    .load(url)\r\n                    .setBodyParameter(\"email\", email)\r\n                    .asJsonObject()\r\n                    .setCallback(FutureCallback<JsonObject> { e, result ->\r\n                        pararAnimacao()\r\n                        if (e != null) {\r\n                            // Ocorreu um erro na solicitação HTTP\r\n                            Toast.makeText(applicationContext, \"Erro na solicitação HTTP: ${e.localizedMessage}\", Toast.LENGTH_LONG).show()\r\n                        } else {\r\n                            try {\r\n                                val jsonObject = result.asJsonObject\r\n                                val ret = jsonObject.get(\"status\").asString\r\n                                if (ret == \"ok\") {\r\n                                    Toast.makeText(applicationContext, \"Senha atualizada!\\nVerifique sua caixa de entrada!\", Toast.LENGTH_LONG).show()\r\n                                } else {\r\n                                    Toast.makeText(applicationContext, \"Erro no servidor: $ret\", Toast.LENGTH_LONG).show()\r\n                                }\r\n                            } catch (ex: Exception) {\r\n                                // Erro ao analisar o JSON da resposta do servidor\r\n                                Toast.makeText(applicationContext, \"Erro ao analisar resposta do servidor: ${ex.localizedMessage}\", Toast.LENGTH_LONG).show()\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n            catch (ex: Exception){\r\n                Toast.makeText(applicationContext,\"${ex.localizedMessage}\", Toast.LENGTH_LONG).show()\r\n            }\r\n        }\r\n        else {\r\n            pararAnimacao()\r\n            binding.emailUsuario.error = \"Digite um Email válido!\"\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/inovafin/EsqueceuSenha.kt b/app/src/main/java/com/example/inovafin/EsqueceuSenha.kt
--- a/app/src/main/java/com/example/inovafin/EsqueceuSenha.kt	
+++ b/app/src/main/java/com/example/inovafin/EsqueceuSenha.kt	
@@ -79,7 +79,7 @@
                                 val jsonObject = result.asJsonObject
                                 val ret = jsonObject.get("status").asString
                                 if (ret == "ok") {
-                                    Toast.makeText(applicationContext, "Senha atualizada!\nVerifique sua caixa de entrada!", Toast.LENGTH_LONG).show()
+                                    Toast.makeText(applicationContext, "Verifique sua caixa de entrada!", Toast.LENGTH_LONG).show()
                                 } else {
                                     Toast.makeText(applicationContext, "Erro no servidor: $ret", Toast.LENGTH_LONG).show()
                                 }
Index: app/src/main/java/com/example/inovafin/Cadastro.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.inovafin\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.provider.ContactsContract.CommonDataKinds.Email\r\nimport android.util.Patterns\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.example.inovafin.databinding.ActivityCadastroBinding\r\nimport com.google.gson.JsonObject\r\nimport com.koushikdutta.async.future.FutureCallback\r\nimport com.koushikdutta.ion.Ion\r\n\r\nclass Cadastro : AppCompatActivity() {\r\n\r\n    var Host = \"https://inovafin.000webhostapp.com/projeto/inserir.php\"\r\n    var url: String? = null\r\n    var ret: String? = null\r\n\r\n    var nome: String? = null\r\n    var email: String? = null\r\n    var senha: String? = null\r\n    var confirmSenha: String? = null\r\n\r\n    private lateinit var binding: ActivityCadastroBinding\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityCadastroBinding.inflate(layoutInflater)\r\n        val view = binding.root\r\n        setContentView(view)\r\n\r\n        // Navegação para Tela LoginCadastro\r\n        binding.icVoltar.setOnClickListener {\r\n            var voltarTela = Intent(this, LoginCadastro::class.java)\r\n            startActivity(voltarTela)\r\n        }\r\n\r\n        binding.btCadastro.setOnClickListener {\r\n            iniciarAnimacao()\r\n            inserir()\r\n        }\r\n    }\r\n\r\n     fun iniciarAnimacao() {\r\n         // Tornar a animação visível e iniciar\r\n         binding.btAnimacao.visibility = View.VISIBLE\r\n         binding.btAnimacao.playAnimation()\r\n\r\n         // Ocultar o texto do botão\r\n         binding.btText.visibility = View.GONE\r\n    }\r\n\r\n     fun pararAnimacao() {\r\n         binding.btAnimacao.cancelAnimation()\r\n         binding.btAnimacao.visibility = View.GONE\r\n\r\n         binding.btText.visibility = View.VISIBLE\r\n    }\r\n\r\n    fun validarNome(nome: String): Boolean {\r\n        return nome.isNotEmpty() && nome.length >= 3\r\n    }\r\n\r\n    fun validarEmail(emailText: String): Boolean {\r\n        val pattern = Patterns.EMAIL_ADDRESS\r\n        return pattern.matcher(emailText).matches()\r\n    }\r\n\r\n    fun validarSenha(): Int? {\r\n        senha = binding.senhaUsuario.text.toString()\r\n        if (senha!!.length >= 8) {\r\n            if (senha == confirmSenha) {\r\n                return null // Senha válida\r\n            } else {\r\n                return 1\r\n            }\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    fun inserir() {\r\n        nome = binding.nomeUsuario.text.toString()\r\n        email = binding.emailUsuario.text.toString()\r\n        confirmSenha = binding.confirmSenhaUsuario.text.toString()\r\n\r\n        url = Host\r\n\r\n        val erroSenha = validarSenha()\r\n\r\n        if (validarNome(nome!!) && validarEmail(email!!) && erroSenha === null) {\r\n            pararAnimacao()\r\n            try {\r\n                Ion.with(this)\r\n                    .load(url)\r\n                    .setBodyParameter(\"nome\", nome)\r\n                    .setBodyParameter(\"email\", email)\r\n                    .setBodyParameter(\"senha\", senha)\r\n                    .asJsonObject()\r\n                    .setCallback(FutureCallback<JsonObject> { e, result ->\r\n                        pararAnimacao()\r\n                        if (e != null) {\r\n                            // Ocorreu um erro na solicitação HTTP\r\n                            Toast.makeText(applicationContext, \"Erro ao cadastrar: \" + e.localizedMessage, Toast.LENGTH_LONG).show()\r\n                        } else {\r\n                            ret = result[\"status\"].asString\r\n                            if (ret == \"ok\")\r\n                            {\r\n                                Toast.makeText(applicationContext, \"Cadastro realizado!\", Toast.LENGTH_LONG).show()\r\n\r\n                                // Navegação para tela Login\r\n                                var navegarTelaLogin = Intent(this, Login::class.java)\r\n                                startActivity(navegarTelaLogin)\r\n                            }\r\n                            else\r\n                                Toast.makeText(applicationContext, \"$ret\", Toast.LENGTH_LONG).show()\r\n                        }\r\n                    })\r\n            } catch (e: Exception) {\r\n                // Lidar com exceções gerais aqui\r\n                Toast.makeText(applicationContext, \"Erro\" + e.localizedMessage, Toast.LENGTH_LONG).show()\r\n            }\r\n        }\r\n        else {\r\n            pararAnimacao()\r\n            if (!validarNome(nome!!)) {\r\n                binding.nomeUsuario.error = \"Nome inválido (pelo menos 3 caracteres)\"\r\n            }\r\n            if (!validarEmail(email!!)) {\r\n                binding.emailUsuario.error = \"Email inválido\"\r\n            }\r\n            if (erroSenha == 0){\r\n                binding.senhaUsuario.error = \"A senha deve conter no mínimo 8 caracteres!\"\r\n            }\r\n            else\r\n            {\r\n                binding.confirmSenhaUsuario.error = \"As senhas são diferentes!\"\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/inovafin/Cadastro.kt b/app/src/main/java/com/example/inovafin/Cadastro.kt
--- a/app/src/main/java/com/example/inovafin/Cadastro.kt	
+++ b/app/src/main/java/com/example/inovafin/Cadastro.kt	
@@ -90,7 +90,6 @@
         val erroSenha = validarSenha()
 
         if (validarNome(nome!!) && validarEmail(email!!) && erroSenha === null) {
-            pararAnimacao()
             try {
                 Ion.with(this)
                     .load(url)
Index: app/src/main/res/layout/activity_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:gravity=\"center\"\r\n    android:background=\"@color/branco_background\"\r\n    tools:context=\".Home\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Tela Home\"\r\n        android:textSize=\"30sp\"\r\n        android:textStyle=\"bold\"\r\n        android:textColor=\"@color/verde_principal\"/>\r\n\r\n</LinearLayout>
===================================================================
diff --git a/app/src/main/res/layout/activity_home.xml b/app/src/main/res/layout/activity_home.xml
--- a/app/src/main/res/layout/activity_home.xml	
+++ b/app/src/main/res/layout/activity_home.xml	
@@ -1,20 +1,28 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:orientation="vertical"
-    android:gravity="center"
-    android:background="@color/branco_background"
-    tools:context=".Home">
+    android:background="@color/branco_background">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="55dp"
+        android:orientation="vertical"
+        android:background="@drawable/bg_botao_perfil"
+        tools:context=".Home">
 
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="Tela Home"
-        android:textSize="30sp"
-        android:textStyle="bold"
-        android:textColor="@color/verde_principal"/>
+        <ImageView
+            android:layout_width="60dp"
+            android:layout_height="60dp"
+
+            android:src="@drawable/img_perfil"
+            android:layout_marginHorizontal="25dp"
+            android:layout_marginVertical="50dp"
+             />
 
-</LinearLayout>
\ No newline at end of file
+    </LinearLayout>
+
+</ScrollView>
