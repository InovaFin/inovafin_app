// Generated by view binder compiler. Do not edit!
package com.example.inovafin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.inovafin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegistroReceberBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btEditar;

  @NonNull
  public final ImageView btExcluir;

  @NonNull
  public final TextView contaRegistro;

  @NonNull
  public final TextView descRegistro;

  @NonNull
  public final ImageView icFechar;

  @NonNull
  public final TextView nomeRegistro;

  @NonNull
  public final TextView valorRegistro;

  @NonNull
  public final TextView vencimentoRegistro;

  private ActivityRegistroReceberBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView btEditar, @NonNull ImageView btExcluir, @NonNull TextView contaRegistro,
      @NonNull TextView descRegistro, @NonNull ImageView icFechar, @NonNull TextView nomeRegistro,
      @NonNull TextView valorRegistro, @NonNull TextView vencimentoRegistro) {
    this.rootView = rootView;
    this.btEditar = btEditar;
    this.btExcluir = btExcluir;
    this.contaRegistro = contaRegistro;
    this.descRegistro = descRegistro;
    this.icFechar = icFechar;
    this.nomeRegistro = nomeRegistro;
    this.valorRegistro = valorRegistro;
    this.vencimentoRegistro = vencimentoRegistro;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegistroReceberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegistroReceberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registro_receber, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegistroReceberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btEditar;
      ImageView btEditar = ViewBindings.findChildViewById(rootView, id);
      if (btEditar == null) {
        break missingId;
      }

      id = R.id.btExcluir;
      ImageView btExcluir = ViewBindings.findChildViewById(rootView, id);
      if (btExcluir == null) {
        break missingId;
      }

      id = R.id.contaRegistro;
      TextView contaRegistro = ViewBindings.findChildViewById(rootView, id);
      if (contaRegistro == null) {
        break missingId;
      }

      id = R.id.descRegistro;
      TextView descRegistro = ViewBindings.findChildViewById(rootView, id);
      if (descRegistro == null) {
        break missingId;
      }

      id = R.id.icFechar;
      ImageView icFechar = ViewBindings.findChildViewById(rootView, id);
      if (icFechar == null) {
        break missingId;
      }

      id = R.id.nomeRegistro;
      TextView nomeRegistro = ViewBindings.findChildViewById(rootView, id);
      if (nomeRegistro == null) {
        break missingId;
      }

      id = R.id.valorRegistro;
      TextView valorRegistro = ViewBindings.findChildViewById(rootView, id);
      if (valorRegistro == null) {
        break missingId;
      }

      id = R.id.vencimentoRegistro;
      TextView vencimentoRegistro = ViewBindings.findChildViewById(rootView, id);
      if (vencimentoRegistro == null) {
        break missingId;
      }

      return new ActivityRegistroReceberBinding((RelativeLayout) rootView, btEditar, btExcluir,
          contaRegistro, descRegistro, icFechar, nomeRegistro, valorRegistro, vencimentoRegistro);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
